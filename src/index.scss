body {
	background: 0;
	min-width: 100vw;
	color: 0;
}

$min_width: 320px;
$max_width: 1200px;
$min_font: 16px;
$max_font: 24px;
$mod_1: 1.2; // mobile
$mod_2: 1.5; // desktop

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(
					#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
						((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
				);
			}
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

html {
	@include fluid-type($min_width, $max_width, $min_font, $max_font);
}

a {
	text-decoration: none;
	color: inherit;
}
body {
	font-family: 'Lora', serif;
	font-family: 'Cinzel', serif;
	-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		scroll-behavior: unset;
}

main {
	position: relative;
	display: block;
	overflow-x: hidden;
	width: 100%;
}
h1 {
	font-size: $mod_1 * $mod_1 * $mod_1 * $mod_1 * 1rem;
	@include fluid-type(
		$min_width,
		$max_width,
		$mod_1 * $mod_1 * $mod_1 * $min_font,
		$mod_2 * $mod_2 * $mod_2 * $min_font
	);
}
h2 {
	font-size: $mod_1 * $mod_1 * $mod_1 * 1rem;
	@include fluid-type(
		$min_width,
		$max_width,
		$mod_1 * $mod_1 * $mod_1 * $min_font,
		$mod_2 * $mod_2 * $mod_2 * $min_font
	);
}
h3 {
	font-size: $mod_1 * $mod_1 * 1rem;
	@include fluid-type(
		$min_width,
		$max_width,
		$mod_1 * $mod_1 * $min_font,
		$mod_2 * $mod_2 * $min_font
	);
}

p {
}

input {
    &:-webkit-autofill ~ span,
    &:-webkit-autofill:hover ~ span,
    &:-webkit-autofill:focus ~ span,
    &:-webkit-autofill:active ~ span {
      transform: translateY(-34px);
      font-size: 14px;
      color: black;
    }
  }

